{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\anton\\\\react\\\\kenztv-web-app\\\\kenztv-app\\\\src\\\\components\\\\Authentication\\\\Accounts.js\";\nimport React, { createContext } from \"react\";\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\nimport Pool from \"./AwsUserPool\";\nconst AccountContext = /*#__PURE__*/createContext();\n\nconst Account = props => {\n  const authenticate = async (Username, Password) => {\n    await new Promise((resolve, reject) => {\n      const user = new CognitoUser({\n        Username,\n        Pool\n      });\n      const authDetails = new AuthenticationDetails({\n        Username,\n        Password\n      });\n      user.authenticateUser(authDetails, {\n        onSuccess: data => {\n          console.log(\"onSuccess\", data);\n          resolve(data);\n        },\n        onFailure: err => {\n          console.error(\"onFailure\", err);\n          reject(err);\n        },\n        newPasswordRequired: data => {\n          console.log(\"newPasswordRequired\", data);\n          resolve(data);\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AccountContext.Provider, {\n    value: {\n      authenticate\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Account;\nexport { Account, AccountContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["C:/Users/anton/react/kenztv-web-app/kenztv-app/src/components/Authentication/Accounts.js"],"names":["React","createContext","CognitoUser","AuthenticationDetails","Pool","AccountContext","Account","props","authenticate","Username","Password","Promise","resolve","reject","user","authDetails","authenticateUser","onSuccess","data","console","log","onFailure","err","error","newPasswordRequired","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,WAAT,EAAsBC,qBAAtB,QAAmD,4BAAnD;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,MAAMC,cAAc,gBAAGJ,aAAa,EAApC;;AAEA,MAAMK,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAMC,YAAY,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjD,UAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrC,YAAMC,IAAI,GAAG,IAAIZ,WAAJ,CAAgB;AAC3BO,QAAAA,QAD2B;AAE3BL,QAAAA;AAF2B,OAAhB,CAAb;AAKA,YAAMW,WAAW,GAAG,IAAIZ,qBAAJ,CAA0B;AAC5CM,QAAAA,QAD4C;AAE5CC,QAAAA;AAF4C,OAA1B,CAApB;AAKAI,MAAAA,IAAI,CAACE,gBAAL,CAAsBD,WAAtB,EAAmC;AACjCE,QAAAA,SAAS,EAAGC,IAAD,IAAU;AACnBC,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB;AACAN,UAAAA,OAAO,CAACM,IAAD,CAAP;AACD,SAJgC;AAMjCG,QAAAA,SAAS,EAAGC,GAAD,IAAS;AAClBH,UAAAA,OAAO,CAACI,KAAR,CAAc,WAAd,EAA2BD,GAA3B;AACAT,UAAAA,MAAM,CAACS,GAAD,CAAN;AACD,SATgC;AAWjCE,QAAAA,mBAAmB,EAAGN,IAAD,IAAU;AAC7BC,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,IAAnC;AACAN,UAAAA,OAAO,CAACM,IAAD,CAAP;AACD;AAdgC,OAAnC;AAgBD,KA3BK,CAAN;AA4BD,GA7BD;;AA+BA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEV,MAAAA;AAAF,KAAhC;AAAA,cACGD,KAAK,CAACkB;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CArCD;;KAAMnB,O;AAuCN,SAASA,OAAT,EAAkBD,cAAlB","sourcesContent":["import React, { createContext } from \"react\"\r\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\"\r\nimport Pool from \"./AwsUserPool\"\r\n\r\nconst AccountContext = createContext()\r\n\r\nconst Account = (props) => {\r\n  const authenticate = async (Username, Password) => {\r\n    await new Promise((resolve, reject) => {\r\n      const user = new CognitoUser({\r\n        Username,\r\n        Pool,\r\n      })\r\n\r\n      const authDetails = new AuthenticationDetails({\r\n        Username,\r\n        Password,\r\n      })\r\n\r\n      user.authenticateUser(authDetails, {\r\n        onSuccess: (data) => {\r\n          console.log(\"onSuccess\", data)\r\n          resolve(data)\r\n        },\r\n\r\n        onFailure: (err) => {\r\n          console.error(\"onFailure\", err)\r\n          reject(err)\r\n        },\r\n\r\n        newPasswordRequired: (data) => {\r\n          console.log(\"newPasswordRequired\", data)\r\n          resolve(data)\r\n        },\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AccountContext.Provider value={{ authenticate }}>\r\n      {props.children}\r\n    </AccountContext.Provider>\r\n  )\r\n}\r\n\r\nexport { Account, AccountContext }\r\n"]},"metadata":{},"sourceType":"module"}