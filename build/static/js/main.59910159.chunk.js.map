{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sKA+IeA,ICnIAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,yDAGFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.59910159.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\n// import styled from \"@emotion/styled\"\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"\n// import axios from \"axios\"\n\n// import WeatherCard from \"./components/WeatherCard/component\"\n// import { isElementOfType } from \"react-dom/test-utils\"\n// import Toolbar from \"./components/Toolbar/Toolbar\"\n// import SideDrawer from \"./components/SideDrawer/SideDrawer\"\n// import Backdrop from \"./components/Backdrop/Backdrop\"\n// import Home from \"./components/MainContentArea/Home\"\n// import Products from \"./components/MainContentArea/Products\"\n// import UsersTable from \"./components/MainContentArea/UsersTable\"\n// import LogOut from \"./components/MainContentArea/Log_out\"\n// import Signup from \"./components/Authentication/SignUp\"\n// import Login from \"./components/Authentication/Login\"\n// import { Account } from \"./components/Authentication/Accounts\"\n// import Status from \"./components/Authentication/Status\"\n// import Settings from \"./components/Settings/Settings\"\n\nfunction App() {\n  // Tootlbar and side bar setup\n\n  // const toolBarHeight = \"50px\"\n\n  // let toolBarItems = {\n  //   logo: \"KenzTV\",\n  //   navItemList: [\n  //     { reference: \"/\", name: \"Home\" },\n  //     { reference: \"/Log-Out\", name: \"Log Out\" },\n  //   ],\n  // }\n\n  // let sideBarItemList = [\n  //   { reference: \"/Products\", name: \"Products\" },\n  //   { reference: \"/Users\", name: \"Users\" },\n  // ]\n\n  // const App = styled.div`\n  //   margin: 0 auto;\n  //   color: white;\n  //   height: 100%;\n  // `\n  // // Tootlbar and side bar functionality\n\n  // const [sideBar, setSideBar] = useState(false)\n  // // const [sideDrawerTemp, setSideDrawerTemp] = useState(null)\n  // // const [backDropTemp, setBackDropTemp] = useState(null)\n\n  // const drawerToggleClickHandler = () => {\n  //   setSideBar(!sideBar)\n  // }\n\n  // const [userList, setUserList] = useState([])\n\n  // const requestOptions = {\n  //   method: \"get\",\n  //   url:\n  //     \"https://j1e3j8uqpd.execute-api.eu-west-1.amazonaws.com/dev/get-user/8912\",\n  //   // data: params,\n  // }\n\n  // const data = async () => {\n  //   const apiResult = await axios(requestOptions)\n  //   const result = await apiResult\n  //   return result\n  // }\n\n  // const getUserList = () => {\n  //   data().then((res) => {\n  //     if (200 === res.status) {\n  //       console.log(res.data)\n  //       setUserList(res.data)\n  //     } else if (400 === res.status) {\n  //       console.log(res.data)\n  //     }\n  //   })\n  // }\n\n  // useEffect(() => {\n  //   getUserList()\n  // }, [])\n\n  return (\n    <p>Site Under Development</p>\n    // <Account>\n    //   <Status />\n    //   <Signup />\n    //   <Login />\n    //   <Settings />\n    // </Account>\n    // <Router>\n    //   <App>\n    //     {sideBar ? <Backdrop click={drawerToggleClickHandler} /> : <div></div>}\n    //     <Switch>\n    //       <Route exact path=\"/Log-Out\">\n    //         <LogOut />\n    //       </Route>\n    //       <Route exact path=\"/\">\n    //         <Toolbar\n    //           toolBarItems={toolBarItems}\n    //           toolBarHeight={toolBarHeight}\n    //           drawerToggleClickHandler={drawerToggleClickHandler}\n    //         />\n    //         <SideDrawer\n    //           show={sideBar}\n    //           click={drawerToggleClickHandler}\n    //           sideBarItemList={sideBarItemList}\n    //         />\n    //         <Home toolBarHeight={toolBarHeight} />\n    //       </Route>\n    //       <Route exact path=\"/Products\">\n    //         <Toolbar\n    //           toolBarItems={toolBarItems}\n    //           toolBarHeight={toolBarHeight}\n    //           drawerToggleClickHandler={drawerToggleClickHandler}\n    //         />\n    //         <SideDrawer\n    //           show={sideBar}\n    //           click={drawerToggleClickHandler}\n    //           sideBarItemList={sideBarItemList}\n    //         />\n    //         <Products toolBarHeight={toolBarHeight} />\n    //       </Route>\n    //       <Route exact path=\"/Users\">\n    //         <Toolbar\n    //           toolBarItems={toolBarItems}\n    //           toolBarHeight={toolBarHeight}\n    //           drawerToggleClickHandler={drawerToggleClickHandler}\n    //         />\n    //         <SideDrawer\n    //           show={sideBar}\n    //           click={drawerToggleClickHandler}\n    //           sideBarItemList={sideBarItemList}\n    //         />\n    //         <UsersTable toolBarHeight={toolBarHeight} userList={userList} />\n    //       </Route>\n    //     </Switch>\n    //   </App>\n    // </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <p>Site Under Development</p>\n    {/* <App /> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}